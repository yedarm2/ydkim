// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model GCharacter {
	@@map("GCharacter")
	id Int @id @default(autoincrement())
	name String
	element Element
	star Int @db.TinyInt
	normalBossMaterialId Int // 정예 토벌 재료
	localSpecialtyMaterialId Int // 특산물
	normalMonsterMaterialCategory String // 캐릭터, 무기 돌파 재료
	weeklyBossMaterialId Int // 주간 보스 재료
	skillLevelUpMaterialCategory Int //특성 육성 재료
}

enum Element {
	pyro // 불
	hydro // 물
	cryo // 얼음
	electro // 번개
	dendro // 풀
	geo // 땅
	anemo // 바람
}

model GWeapon {
	@@map("GWeapon")
	id Int @id @default(autoincrement())
	name String
	type WeaponType
	star Int @db.TinyInt
	weaponLevelUpMaterialCategory Int // 무기 돌파 재료
	normalMonsterMaterial1Category String // 캐릭터, 무기 돌파 재료1
	normalMonsterMaterial2Category String // 캐릭터, 무기 돌파 재료2
}

enum WeaponType {
	sword // 한손검
	claymore // 양손검
	polearm // 장병기
	catalyst // 법구
	bow // 활
}

model GArtifact {
	@@map("GArtifact")
	id Int @id @default(autoincrement())
	name String
	star Int @db.TinyInt
}

model GMaterial {
	@@map("GMaterial")
	id Int @id @default(autoincrement())
	name String
	star Int @db.TinyInt
	type MaterialType
	category String?
}

enum MaterialType {
	normalBoss // 정예토벌보스
	localSpecialty // 특산품
	normalMonster
	weeklyBoss
	skillLevelUp
	weaponLevelUp
}

model GExperienceTable {
	@@map("GExperienceTable")
	id Int @id @default(autoincrement())
}

model User {
	@@map("User")
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Post {
	@@map("Post")
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
}
